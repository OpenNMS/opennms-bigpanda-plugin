<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
                http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0
                http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd">

    <!-- Configuration stored in $OPENNMS_HOME/etc/org.opennms.integrations.bigpanda.cfg file -->
    <cm:property-placeholder id="bigpandaPluginProperties" persistent-id="org.opennms.integrations.bigpanda" update-strategy="reload">
        <cm:default-properties>
            <cm:property name="url" value="https://api.bigpanda.io/data/v2/alerts" />
            <cm:property name="apiKey" value="TOKEN" />
        </cm:default-properties>
    </cm:property-placeholder>

    <!-- Pull in service implementations from the OSGi registry -->
    <reference id="alarmDao" interface="org.opennms.integration.api.v1.dao.AlarmDao" availability="optional"/>
    <reference id="edgeDao" interface="org.opennms.integration.api.v1.dao.EdgeDao" availability="optional"/>
    <reference id="eventForwarder" interface="org.opennms.integration.api.v1.events.EventForwarder" availability="optional"/>

    <!-- Build our API client -->
    <bean id="apiClient" class="org.opennms.integrations.bigpanda.ApiClient">
        <argument value="${url}"/>
        <argument value="${apiKey}"/>
    </bean>

    <!-- Build & expose our health check -->
    <bean id="healthCheck" class="org.opennms.integrations.bigpanda.ApiHealthCheck">
        <argument ref="apiClient"/>
    </bean>
    <service interface="org.opennms.integration.api.v1.health.HealthCheck" ref="healthCheck"/>

    <!-- Build our forwarder bean -->
    <bean id="alarmForwarder" class="org.opennms.integrations.bigpanda.AlarmForwarder">
        <argument ref="apiClient"/>
        <argument ref="eventForwarder"/>
    </bean>
    <!-- Expose the forwarder as a AlarmLifecycleListener so we get callbacks -->
    <service interface="org.opennms.integration.api.v1.alarms.AlarmLifecycleListener" ref="alarmForwarder"/>
    <!-- Expose the forwarder directly for access from our shell commands -->
    <service interface="org.opennms.integrations.bigpanda.AlarmForwarder" ref="alarmForwarder"/>

    <!-- Build our forwarder bean -->
    <bean id="topologyForwarder" class="org.opennms.integrations.bigpanda.TopologyForwarder">
        <argument ref="apiClient"/>
        <argument ref="edgeDao"/>
    </bean>
    <!-- Expose the forwarder directly for access from our shell commands -->
    <service interface="org.opennms.integrations.bigpanda.TopologyForwarder" ref="topologyForwarder"/>

    <!-- Build and expose the JAX-RS annotated webhook handler.
         This will automatically mount the endpoint over the REST API. -->
    <bean id="webhookHandlerImpl" class="org.opennms.integrations.bigpanda.WebhookHandlerImpl" />
    <service interface="org.opennms.integrations.bigpanda.WebhookHandler" ref="webhookHandlerImpl">
        <service-properties>
            <entry key="application-path" value="/rest" />
        </service-properties>
    </service>

    <!-- Expose our custom event definitions bundled in the .jar -->
    <service interface="org.opennms.integration.api.v1.config.events.EventConfExtension">
        <bean class="org.opennms.integrations.bigpanda.EventConfExtension"/>
    </service>

</blueprint>